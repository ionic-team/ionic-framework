/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import { type AccordionGroupChangeEventDetail, type BreadcrumbCollapsedClickEventDetail, type CheckboxChangeEventDetail, type DatetimeChangeEventDetail, type InputChangeEventDetail, type InputInputEventDetail, type IonAccordionGroupCustomEvent, type IonBreadcrumbsCustomEvent, type IonCheckboxCustomEvent, type IonContentCustomEvent, type IonDatetimeCustomEvent, type IonInputCustomEvent, type IonPickerColumnCustomEvent, type IonRadioGroupCustomEvent, type IonRangeCustomEvent, type IonRefresherCustomEvent, type IonReorderGroupCustomEvent, type IonSearchbarCustomEvent, type IonSegmentCustomEvent, type IonSelectCustomEvent, type IonTextareaCustomEvent, type IonToggleCustomEvent, type ItemReorderEventDetail, type PickerColumnChangeEventDetail, type RadioGroupChangeEventDetail, type RangeChangeEventDetail, type RangeKnobMoveEndEventDetail, type RangeKnobMoveStartEventDetail, type RefresherEventDetail, type ScrollBaseDetail, type ScrollDetail, type SearchbarChangeEventDetail, type SearchbarInputEventDetail, type SegmentChangeEventDetail, type SelectChangeEventDetail, type TextareaChangeEventDetail, type TextareaInputEventDetail, type ToggleChangeEventDetail } from "@ionic/core";
import { IonAccordionGroup as IonAccordionGroupElement, defineCustomElement as defineIonAccordionGroup } from "@ionic/core/components/ion-accordion-group.js";
import { IonAccordion as IonAccordionElement, defineCustomElement as defineIonAccordion } from "@ionic/core/components/ion-accordion.js";
import { IonAvatar as IonAvatarElement, defineCustomElement as defineIonAvatar } from "@ionic/core/components/ion-avatar.js";
import { IonBackdrop as IonBackdropElement, defineCustomElement as defineIonBackdrop } from "@ionic/core/components/ion-backdrop.js";
import { IonBadge as IonBadgeElement, defineCustomElement as defineIonBadge } from "@ionic/core/components/ion-badge.js";
import { IonBreadcrumbs as IonBreadcrumbsElement, defineCustomElement as defineIonBreadcrumbs } from "@ionic/core/components/ion-breadcrumbs.js";
import { IonButtons as IonButtonsElement, defineCustomElement as defineIonButtons } from "@ionic/core/components/ion-buttons.js";
import { IonCardContent as IonCardContentElement, defineCustomElement as defineIonCardContent } from "@ionic/core/components/ion-card-content.js";
import { IonCardHeader as IonCardHeaderElement, defineCustomElement as defineIonCardHeader } from "@ionic/core/components/ion-card-header.js";
import { IonCardSubtitle as IonCardSubtitleElement, defineCustomElement as defineIonCardSubtitle } from "@ionic/core/components/ion-card-subtitle.js";
import { IonCardTitle as IonCardTitleElement, defineCustomElement as defineIonCardTitle } from "@ionic/core/components/ion-card-title.js";
import { IonCheckbox as IonCheckboxElement, defineCustomElement as defineIonCheckbox } from "@ionic/core/components/ion-checkbox.js";
import { IonChip as IonChipElement, defineCustomElement as defineIonChip } from "@ionic/core/components/ion-chip.js";
import { IonCol as IonColElement, defineCustomElement as defineIonCol } from "@ionic/core/components/ion-col.js";
import { IonContent as IonContentElement, defineCustomElement as defineIonContent } from "@ionic/core/components/ion-content.js";
import { IonDatetimeButton as IonDatetimeButtonElement, defineCustomElement as defineIonDatetimeButton } from "@ionic/core/components/ion-datetime-button.js";
import { IonDatetime as IonDatetimeElement, defineCustomElement as defineIonDatetime } from "@ionic/core/components/ion-datetime.js";
import { IonFabList as IonFabListElement, defineCustomElement as defineIonFabList } from "@ionic/core/components/ion-fab-list.js";
import { IonFab as IonFabElement, defineCustomElement as defineIonFab } from "@ionic/core/components/ion-fab.js";
import { IonFooter as IonFooterElement, defineCustomElement as defineIonFooter } from "@ionic/core/components/ion-footer.js";
import { IonGrid as IonGridElement, defineCustomElement as defineIonGrid } from "@ionic/core/components/ion-grid.js";
import { IonHeader as IonHeaderElement, defineCustomElement as defineIonHeader } from "@ionic/core/components/ion-header.js";
import { IonImg as IonImgElement, defineCustomElement as defineIonImg } from "@ionic/core/components/ion-img.js";
import { IonInfiniteScrollContent as IonInfiniteScrollContentElement, defineCustomElement as defineIonInfiniteScrollContent } from "@ionic/core/components/ion-infinite-scroll-content.js";
import { IonInfiniteScroll as IonInfiniteScrollElement, defineCustomElement as defineIonInfiniteScroll } from "@ionic/core/components/ion-infinite-scroll.js";
import { IonInputPasswordToggle as IonInputPasswordToggleElement, defineCustomElement as defineIonInputPasswordToggle } from "@ionic/core/components/ion-input-password-toggle.js";
import { IonInput as IonInputElement, defineCustomElement as defineIonInput } from "@ionic/core/components/ion-input.js";
import { IonItemDivider as IonItemDividerElement, defineCustomElement as defineIonItemDivider } from "@ionic/core/components/ion-item-divider.js";
import { IonItemGroup as IonItemGroupElement, defineCustomElement as defineIonItemGroup } from "@ionic/core/components/ion-item-group.js";
import { IonItemOptions as IonItemOptionsElement, defineCustomElement as defineIonItemOptions } from "@ionic/core/components/ion-item-options.js";
import { IonItemSliding as IonItemSlidingElement, defineCustomElement as defineIonItemSliding } from "@ionic/core/components/ion-item-sliding.js";
import { IonLabel as IonLabelElement, defineCustomElement as defineIonLabel } from "@ionic/core/components/ion-label.js";
import { IonListHeader as IonListHeaderElement, defineCustomElement as defineIonListHeader } from "@ionic/core/components/ion-list-header.js";
import { IonList as IonListElement, defineCustomElement as defineIonList } from "@ionic/core/components/ion-list.js";
import { IonMenuButton as IonMenuButtonElement, defineCustomElement as defineIonMenuButton } from "@ionic/core/components/ion-menu-button.js";
import { IonMenuToggle as IonMenuToggleElement, defineCustomElement as defineIonMenuToggle } from "@ionic/core/components/ion-menu-toggle.js";
import { IonMenu as IonMenuElement, defineCustomElement as defineIonMenu } from "@ionic/core/components/ion-menu.js";
import { IonNavLink as IonNavLinkElement, defineCustomElement as defineIonNavLink } from "@ionic/core/components/ion-nav-link.js";
import { IonNav as IonNavElement, defineCustomElement as defineIonNav } from "@ionic/core/components/ion-nav.js";
import { IonNote as IonNoteElement, defineCustomElement as defineIonNote } from "@ionic/core/components/ion-note.js";
import { IonPickerColumnOption as IonPickerColumnOptionElement, defineCustomElement as defineIonPickerColumnOption } from "@ionic/core/components/ion-picker-column-option.js";
import { IonPickerColumn as IonPickerColumnElement, defineCustomElement as defineIonPickerColumn } from "@ionic/core/components/ion-picker-column.js";
import { IonPicker as IonPickerElement, defineCustomElement as defineIonPicker } from "@ionic/core/components/ion-picker.js";
import { IonProgressBar as IonProgressBarElement, defineCustomElement as defineIonProgressBar } from "@ionic/core/components/ion-progress-bar.js";
import { IonRadioGroup as IonRadioGroupElement, defineCustomElement as defineIonRadioGroup } from "@ionic/core/components/ion-radio-group.js";
import { IonRadio as IonRadioElement, defineCustomElement as defineIonRadio } from "@ionic/core/components/ion-radio.js";
import { IonRange as IonRangeElement, defineCustomElement as defineIonRange } from "@ionic/core/components/ion-range.js";
import { IonRefresherContent as IonRefresherContentElement, defineCustomElement as defineIonRefresherContent } from "@ionic/core/components/ion-refresher-content.js";
import { IonRefresher as IonRefresherElement, defineCustomElement as defineIonRefresher } from "@ionic/core/components/ion-refresher.js";
import { IonReorderGroup as IonReorderGroupElement, defineCustomElement as defineIonReorderGroup } from "@ionic/core/components/ion-reorder-group.js";
import { IonReorder as IonReorderElement, defineCustomElement as defineIonReorder } from "@ionic/core/components/ion-reorder.js";
import { IonRippleEffect as IonRippleEffectElement, defineCustomElement as defineIonRippleEffect } from "@ionic/core/components/ion-ripple-effect.js";
import { IonRow as IonRowElement, defineCustomElement as defineIonRow } from "@ionic/core/components/ion-row.js";
import { IonSearchbar as IonSearchbarElement, defineCustomElement as defineIonSearchbar } from "@ionic/core/components/ion-searchbar.js";
import { IonSegmentButton as IonSegmentButtonElement, defineCustomElement as defineIonSegmentButton } from "@ionic/core/components/ion-segment-button.js";
import { IonSegment as IonSegmentElement, defineCustomElement as defineIonSegment } from "@ionic/core/components/ion-segment.js";
import { IonSelectOption as IonSelectOptionElement, defineCustomElement as defineIonSelectOption } from "@ionic/core/components/ion-select-option.js";
import { IonSelect as IonSelectElement, defineCustomElement as defineIonSelect } from "@ionic/core/components/ion-select.js";
import { IonSkeletonText as IonSkeletonTextElement, defineCustomElement as defineIonSkeletonText } from "@ionic/core/components/ion-skeleton-text.js";
import { IonSpinner as IonSpinnerElement, defineCustomElement as defineIonSpinner } from "@ionic/core/components/ion-spinner.js";
import { IonSplitPane as IonSplitPaneElement, defineCustomElement as defineIonSplitPane } from "@ionic/core/components/ion-split-pane.js";
import { IonTab as IonTabElement, defineCustomElement as defineIonTab } from "@ionic/core/components/ion-tab.js";
import { IonText as IonTextElement, defineCustomElement as defineIonText } from "@ionic/core/components/ion-text.js";
import { IonTextarea as IonTextareaElement, defineCustomElement as defineIonTextarea } from "@ionic/core/components/ion-textarea.js";
import { IonThumbnail as IonThumbnailElement, defineCustomElement as defineIonThumbnail } from "@ionic/core/components/ion-thumbnail.js";
import { IonTitle as IonTitleElement, defineCustomElement as defineIonTitle } from "@ionic/core/components/ion-title.js";
import { IonToggle as IonToggleElement, defineCustomElement as defineIonToggle } from "@ionic/core/components/ion-toggle.js";
import { IonToolbar as IonToolbarElement, defineCustomElement as defineIonToolbar } from "@ionic/core/components/ion-toolbar.js";
import { renderToString } from "@ionic/core/hydrate";
import type { EventName } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import { createComponentForServerSideRendering } from "@stencil/react-output-target/ssr";
import React from 'react';

type IonAccordionEvents = NonNullable<unknown>;

export const IonAccordion = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonAccordionElement, IonAccordionEvents>({
        tagName: 'ion-accordion',
        elementClass: IonAccordionElement,
        react: React,
        events: {} as IonAccordionEvents,
        defineCustomElement: defineIonAccordion
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonAccordionElement, IonAccordionEvents>({
        tagName: 'ion-accordion',
        renderToString,
    });

type IonAccordionGroupEvents = { onIonChange: EventName<IonAccordionGroupCustomEvent<AccordionGroupChangeEventDetail>> };

export const IonAccordionGroup = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonAccordionGroupElement, IonAccordionGroupEvents>({
        tagName: 'ion-accordion-group',
        elementClass: IonAccordionGroupElement,
        react: React,
        events: { onIonChange: 'ionChange' } as IonAccordionGroupEvents,
        defineCustomElement: defineIonAccordionGroup
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonAccordionGroupElement, IonAccordionGroupEvents>({
        tagName: 'ion-accordion-group',
        renderToString,
    });

type IonAvatarEvents = NonNullable<unknown>;

export const IonAvatar = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonAvatarElement, IonAvatarEvents>({
        tagName: 'ion-avatar',
        elementClass: IonAvatarElement,
        react: React,
        events: {} as IonAvatarEvents,
        defineCustomElement: defineIonAvatar
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonAvatarElement, IonAvatarEvents>({
        tagName: 'ion-avatar',
        renderToString,
    });

type IonBackdropEvents = { onIonBackdropTap: EventName<CustomEvent<void>> };

export const IonBackdrop = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonBackdropElement, IonBackdropEvents>({
        tagName: 'ion-backdrop',
        elementClass: IonBackdropElement,
        react: React,
        events: { onIonBackdropTap: 'ionBackdropTap' } as IonBackdropEvents,
        defineCustomElement: defineIonBackdrop
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonBackdropElement, IonBackdropEvents>({
        tagName: 'ion-backdrop',
        renderToString,
    });

type IonBadgeEvents = NonNullable<unknown>;

export const IonBadge = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonBadgeElement, IonBadgeEvents>({
        tagName: 'ion-badge',
        elementClass: IonBadgeElement,
        react: React,
        events: {} as IonBadgeEvents,
        defineCustomElement: defineIonBadge
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonBadgeElement, IonBadgeEvents>({
        tagName: 'ion-badge',
        renderToString,
    });

type IonBreadcrumbsEvents = { onIonCollapsedClick: EventName<IonBreadcrumbsCustomEvent<BreadcrumbCollapsedClickEventDetail>> };

export const IonBreadcrumbs = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonBreadcrumbsElement, IonBreadcrumbsEvents>({
        tagName: 'ion-breadcrumbs',
        elementClass: IonBreadcrumbsElement,
        react: React,
        events: { onIonCollapsedClick: 'ionCollapsedClick' } as IonBreadcrumbsEvents,
        defineCustomElement: defineIonBreadcrumbs
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonBreadcrumbsElement, IonBreadcrumbsEvents>({
        tagName: 'ion-breadcrumbs',
        renderToString,
    });

type IonButtonsEvents = NonNullable<unknown>;

export const IonButtons = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonButtonsElement, IonButtonsEvents>({
        tagName: 'ion-buttons',
        elementClass: IonButtonsElement,
        react: React,
        events: {} as IonButtonsEvents,
        defineCustomElement: defineIonButtons
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonButtonsElement, IonButtonsEvents>({
        tagName: 'ion-buttons',
        renderToString,
    });

type IonCardContentEvents = NonNullable<unknown>;

export const IonCardContent = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonCardContentElement, IonCardContentEvents>({
        tagName: 'ion-card-content',
        elementClass: IonCardContentElement,
        react: React,
        events: {} as IonCardContentEvents,
        defineCustomElement: defineIonCardContent
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonCardContentElement, IonCardContentEvents>({
        tagName: 'ion-card-content',
        renderToString,
    });

type IonCardHeaderEvents = NonNullable<unknown>;

export const IonCardHeader = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonCardHeaderElement, IonCardHeaderEvents>({
        tagName: 'ion-card-header',
        elementClass: IonCardHeaderElement,
        react: React,
        events: {} as IonCardHeaderEvents,
        defineCustomElement: defineIonCardHeader
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonCardHeaderElement, IonCardHeaderEvents>({
        tagName: 'ion-card-header',
        renderToString,
    });

type IonCardSubtitleEvents = NonNullable<unknown>;

export const IonCardSubtitle = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonCardSubtitleElement, IonCardSubtitleEvents>({
        tagName: 'ion-card-subtitle',
        elementClass: IonCardSubtitleElement,
        react: React,
        events: {} as IonCardSubtitleEvents,
        defineCustomElement: defineIonCardSubtitle
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonCardSubtitleElement, IonCardSubtitleEvents>({
        tagName: 'ion-card-subtitle',
        renderToString,
    });

type IonCardTitleEvents = NonNullable<unknown>;

export const IonCardTitle = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonCardTitleElement, IonCardTitleEvents>({
        tagName: 'ion-card-title',
        elementClass: IonCardTitleElement,
        react: React,
        events: {} as IonCardTitleEvents,
        defineCustomElement: defineIonCardTitle
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonCardTitleElement, IonCardTitleEvents>({
        tagName: 'ion-card-title',
        renderToString,
    });

type IonCheckboxEvents = {
    onIonChange: EventName<IonCheckboxCustomEvent<CheckboxChangeEventDetail>>,
    onIonFocus: EventName<CustomEvent<void>>,
    onIonBlur: EventName<CustomEvent<void>>
};

export const IonCheckbox = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonCheckboxElement, IonCheckboxEvents>({
        tagName: 'ion-checkbox',
        elementClass: IonCheckboxElement,
        react: React,
        events: {
            onIonChange: 'ionChange',
            onIonFocus: 'ionFocus',
            onIonBlur: 'ionBlur'
        } as IonCheckboxEvents,
        defineCustomElement: defineIonCheckbox
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonCheckboxElement, IonCheckboxEvents>({
        tagName: 'ion-checkbox',
        renderToString,
    });

type IonChipEvents = NonNullable<unknown>;

export const IonChip = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonChipElement, IonChipEvents>({
        tagName: 'ion-chip',
        elementClass: IonChipElement,
        react: React,
        events: {} as IonChipEvents,
        defineCustomElement: defineIonChip
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonChipElement, IonChipEvents>({
        tagName: 'ion-chip',
        renderToString,
    });

type IonColEvents = NonNullable<unknown>;

export const IonCol = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonColElement, IonColEvents>({
        tagName: 'ion-col',
        elementClass: IonColElement,
        react: React,
        events: {} as IonColEvents,
        defineCustomElement: defineIonCol
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonColElement, IonColEvents>({
        tagName: 'ion-col',
        renderToString,
    });

type IonContentEvents = {
    onIonScrollStart: EventName<IonContentCustomEvent<ScrollBaseDetail>>,
    onIonScroll: EventName<IonContentCustomEvent<ScrollDetail>>,
    onIonScrollEnd: EventName<IonContentCustomEvent<ScrollBaseDetail>>
};

export const IonContent = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonContentElement, IonContentEvents>({
        tagName: 'ion-content',
        elementClass: IonContentElement,
        react: React,
        events: {
            onIonScrollStart: 'ionScrollStart',
            onIonScroll: 'ionScroll',
            onIonScrollEnd: 'ionScrollEnd'
        } as IonContentEvents,
        defineCustomElement: defineIonContent
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonContentElement, IonContentEvents>({
        tagName: 'ion-content',
        renderToString,
    });

type IonDatetimeEvents = {
    onIonCancel: EventName<CustomEvent<void>>,
    onIonChange: EventName<IonDatetimeCustomEvent<DatetimeChangeEventDetail>>,
    onIonFocus: EventName<CustomEvent<void>>,
    onIonBlur: EventName<CustomEvent<void>>
};

export const IonDatetime = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonDatetimeElement, IonDatetimeEvents>({
        tagName: 'ion-datetime',
        elementClass: IonDatetimeElement,
        react: React,
        events: {
            onIonCancel: 'ionCancel',
            onIonChange: 'ionChange',
            onIonFocus: 'ionFocus',
            onIonBlur: 'ionBlur'
        } as IonDatetimeEvents,
        defineCustomElement: defineIonDatetime
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonDatetimeElement, IonDatetimeEvents>({
        tagName: 'ion-datetime',
        renderToString,
    });

type IonDatetimeButtonEvents = NonNullable<unknown>;

export const IonDatetimeButton = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonDatetimeButtonElement, IonDatetimeButtonEvents>({
        tagName: 'ion-datetime-button',
        elementClass: IonDatetimeButtonElement,
        react: React,
        events: {} as IonDatetimeButtonEvents,
        defineCustomElement: defineIonDatetimeButton
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonDatetimeButtonElement, IonDatetimeButtonEvents>({
        tagName: 'ion-datetime-button',
        renderToString,
    });

type IonFabEvents = NonNullable<unknown>;

export const IonFab = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonFabElement, IonFabEvents>({
        tagName: 'ion-fab',
        elementClass: IonFabElement,
        react: React,
        events: {} as IonFabEvents,
        defineCustomElement: defineIonFab
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonFabElement, IonFabEvents>({
        tagName: 'ion-fab',
        renderToString,
    });

type IonFabListEvents = NonNullable<unknown>;

export const IonFabList = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonFabListElement, IonFabListEvents>({
        tagName: 'ion-fab-list',
        elementClass: IonFabListElement,
        react: React,
        events: {} as IonFabListEvents,
        defineCustomElement: defineIonFabList
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonFabListElement, IonFabListEvents>({
        tagName: 'ion-fab-list',
        renderToString,
    });

type IonFooterEvents = NonNullable<unknown>;

export const IonFooter = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonFooterElement, IonFooterEvents>({
        tagName: 'ion-footer',
        elementClass: IonFooterElement,
        react: React,
        events: {} as IonFooterEvents,
        defineCustomElement: defineIonFooter
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonFooterElement, IonFooterEvents>({
        tagName: 'ion-footer',
        renderToString,
    });

type IonGridEvents = NonNullable<unknown>;

export const IonGrid = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonGridElement, IonGridEvents>({
        tagName: 'ion-grid',
        elementClass: IonGridElement,
        react: React,
        events: {} as IonGridEvents,
        defineCustomElement: defineIonGrid
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonGridElement, IonGridEvents>({
        tagName: 'ion-grid',
        renderToString,
    });

type IonHeaderEvents = NonNullable<unknown>;

export const IonHeader = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonHeaderElement, IonHeaderEvents>({
        tagName: 'ion-header',
        elementClass: IonHeaderElement,
        react: React,
        events: {} as IonHeaderEvents,
        defineCustomElement: defineIonHeader
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonHeaderElement, IonHeaderEvents>({
        tagName: 'ion-header',
        renderToString,
    });

type IonImgEvents = {
    onIonImgWillLoad: EventName<CustomEvent<void>>,
    onIonImgDidLoad: EventName<CustomEvent<void>>,
    onIonError: EventName<CustomEvent<void>>
};

export const IonImg = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonImgElement, IonImgEvents>({
        tagName: 'ion-img',
        elementClass: IonImgElement,
        react: React,
        events: {
            onIonImgWillLoad: 'ionImgWillLoad',
            onIonImgDidLoad: 'ionImgDidLoad',
            onIonError: 'ionError'
        } as IonImgEvents,
        defineCustomElement: defineIonImg
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonImgElement, IonImgEvents>({
        tagName: 'ion-img',
        renderToString,
    });

type IonInfiniteScrollEvents = { onIonInfinite: EventName<CustomEvent<void>> };

export const IonInfiniteScroll = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonInfiniteScrollElement, IonInfiniteScrollEvents>({
        tagName: 'ion-infinite-scroll',
        elementClass: IonInfiniteScrollElement,
        react: React,
        events: { onIonInfinite: 'ionInfinite' } as IonInfiniteScrollEvents,
        defineCustomElement: defineIonInfiniteScroll
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonInfiniteScrollElement, IonInfiniteScrollEvents>({
        tagName: 'ion-infinite-scroll',
        renderToString,
    });

type IonInfiniteScrollContentEvents = NonNullable<unknown>;

export const IonInfiniteScrollContent = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonInfiniteScrollContentElement, IonInfiniteScrollContentEvents>({
        tagName: 'ion-infinite-scroll-content',
        elementClass: IonInfiniteScrollContentElement,
        react: React,
        events: {} as IonInfiniteScrollContentEvents,
        defineCustomElement: defineIonInfiniteScrollContent
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonInfiniteScrollContentElement, IonInfiniteScrollContentEvents>({
        tagName: 'ion-infinite-scroll-content',
        renderToString,
    });

type IonInputEvents = {
    onIonInput: EventName<IonInputCustomEvent<InputInputEventDetail>>,
    onIonChange: EventName<IonInputCustomEvent<InputChangeEventDetail>>,
    onIonBlur: EventName<IonInputCustomEvent<FocusEvent>>,
    onIonFocus: EventName<IonInputCustomEvent<FocusEvent>>
};

export const IonInput = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonInputElement, IonInputEvents>({
        tagName: 'ion-input',
        elementClass: IonInputElement,
        react: React,
        events: {
            onIonInput: 'ionInput',
            onIonChange: 'ionChange',
            onIonBlur: 'ionBlur',
            onIonFocus: 'ionFocus'
        } as IonInputEvents,
        defineCustomElement: defineIonInput
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonInputElement, IonInputEvents>({
        tagName: 'ion-input',
        renderToString,
    });

type IonInputPasswordToggleEvents = NonNullable<unknown>;

export const IonInputPasswordToggle = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonInputPasswordToggleElement, IonInputPasswordToggleEvents>({
        tagName: 'ion-input-password-toggle',
        elementClass: IonInputPasswordToggleElement,
        react: React,
        events: {} as IonInputPasswordToggleEvents,
        defineCustomElement: defineIonInputPasswordToggle
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonInputPasswordToggleElement, IonInputPasswordToggleEvents>({
        tagName: 'ion-input-password-toggle',
        renderToString,
    });

type IonItemDividerEvents = NonNullable<unknown>;

export const IonItemDivider = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonItemDividerElement, IonItemDividerEvents>({
        tagName: 'ion-item-divider',
        elementClass: IonItemDividerElement,
        react: React,
        events: {} as IonItemDividerEvents,
        defineCustomElement: defineIonItemDivider
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonItemDividerElement, IonItemDividerEvents>({
        tagName: 'ion-item-divider',
        renderToString,
    });

type IonItemGroupEvents = NonNullable<unknown>;

export const IonItemGroup = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonItemGroupElement, IonItemGroupEvents>({
        tagName: 'ion-item-group',
        elementClass: IonItemGroupElement,
        react: React,
        events: {} as IonItemGroupEvents,
        defineCustomElement: defineIonItemGroup
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonItemGroupElement, IonItemGroupEvents>({
        tagName: 'ion-item-group',
        renderToString,
    });

type IonItemOptionsEvents = { onIonSwipe: EventName<CustomEvent<any>> };

export const IonItemOptions = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonItemOptionsElement, IonItemOptionsEvents>({
        tagName: 'ion-item-options',
        elementClass: IonItemOptionsElement,
        react: React,
        events: { onIonSwipe: 'ionSwipe' } as IonItemOptionsEvents,
        defineCustomElement: defineIonItemOptions
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonItemOptionsElement, IonItemOptionsEvents>({
        tagName: 'ion-item-options',
        renderToString,
    });

type IonItemSlidingEvents = { onIonDrag: EventName<CustomEvent<any>> };

export const IonItemSliding = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonItemSlidingElement, IonItemSlidingEvents>({
        tagName: 'ion-item-sliding',
        elementClass: IonItemSlidingElement,
        react: React,
        events: { onIonDrag: 'ionDrag' } as IonItemSlidingEvents,
        defineCustomElement: defineIonItemSliding
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonItemSlidingElement, IonItemSlidingEvents>({
        tagName: 'ion-item-sliding',
        renderToString,
    });

type IonLabelEvents = NonNullable<unknown>;

export const IonLabel = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonLabelElement, IonLabelEvents>({
        tagName: 'ion-label',
        elementClass: IonLabelElement,
        react: React,
        events: {} as IonLabelEvents,
        defineCustomElement: defineIonLabel
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonLabelElement, IonLabelEvents>({
        tagName: 'ion-label',
        renderToString,
    });

type IonListEvents = NonNullable<unknown>;

export const IonList = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonListElement, IonListEvents>({
        tagName: 'ion-list',
        elementClass: IonListElement,
        react: React,
        events: {} as IonListEvents,
        defineCustomElement: defineIonList
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonListElement, IonListEvents>({
        tagName: 'ion-list',
        renderToString,
    });

type IonListHeaderEvents = NonNullable<unknown>;

export const IonListHeader = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonListHeaderElement, IonListHeaderEvents>({
        tagName: 'ion-list-header',
        elementClass: IonListHeaderElement,
        react: React,
        events: {} as IonListHeaderEvents,
        defineCustomElement: defineIonListHeader
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonListHeaderElement, IonListHeaderEvents>({
        tagName: 'ion-list-header',
        renderToString,
    });

type IonMenuEvents = {
    onIonWillOpen: EventName<CustomEvent<void>>,
    onIonWillClose: EventName<CustomEvent<void>>,
    onIonDidOpen: EventName<CustomEvent<void>>,
    onIonDidClose: EventName<CustomEvent<void>>
};

export const IonMenu = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonMenuElement, IonMenuEvents>({
        tagName: 'ion-menu',
        elementClass: IonMenuElement,
        react: React,
        events: {
            onIonWillOpen: 'ionWillOpen',
            onIonWillClose: 'ionWillClose',
            onIonDidOpen: 'ionDidOpen',
            onIonDidClose: 'ionDidClose'
        } as IonMenuEvents,
        defineCustomElement: defineIonMenu
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonMenuElement, IonMenuEvents>({
        tagName: 'ion-menu',
        renderToString,
    });

type IonMenuButtonEvents = NonNullable<unknown>;

export const IonMenuButton = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonMenuButtonElement, IonMenuButtonEvents>({
        tagName: 'ion-menu-button',
        elementClass: IonMenuButtonElement,
        react: React,
        events: {} as IonMenuButtonEvents,
        defineCustomElement: defineIonMenuButton
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonMenuButtonElement, IonMenuButtonEvents>({
        tagName: 'ion-menu-button',
        renderToString,
    });

type IonMenuToggleEvents = NonNullable<unknown>;

export const IonMenuToggle = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonMenuToggleElement, IonMenuToggleEvents>({
        tagName: 'ion-menu-toggle',
        elementClass: IonMenuToggleElement,
        react: React,
        events: {} as IonMenuToggleEvents,
        defineCustomElement: defineIonMenuToggle
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonMenuToggleElement, IonMenuToggleEvents>({
        tagName: 'ion-menu-toggle',
        renderToString,
    });

type IonNavEvents = {
    onIonNavWillChange: EventName<CustomEvent<void>>,
    onIonNavDidChange: EventName<CustomEvent<void>>
};

export const IonNav = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonNavElement, IonNavEvents>({
        tagName: 'ion-nav',
        elementClass: IonNavElement,
        react: React,
        events: {
            onIonNavWillChange: 'ionNavWillChange',
            onIonNavDidChange: 'ionNavDidChange'
        } as IonNavEvents,
        defineCustomElement: defineIonNav
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonNavElement, IonNavEvents>({
        tagName: 'ion-nav',
        renderToString,
    });

type IonNavLinkEvents = NonNullable<unknown>;

export const IonNavLink = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonNavLinkElement, IonNavLinkEvents>({
        tagName: 'ion-nav-link',
        elementClass: IonNavLinkElement,
        react: React,
        events: {} as IonNavLinkEvents,
        defineCustomElement: defineIonNavLink
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonNavLinkElement, IonNavLinkEvents>({
        tagName: 'ion-nav-link',
        renderToString,
    });

type IonNoteEvents = NonNullable<unknown>;

export const IonNote = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonNoteElement, IonNoteEvents>({
        tagName: 'ion-note',
        elementClass: IonNoteElement,
        react: React,
        events: {} as IonNoteEvents,
        defineCustomElement: defineIonNote
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonNoteElement, IonNoteEvents>({
        tagName: 'ion-note',
        renderToString,
    });

type IonPickerEvents = NonNullable<unknown>;

export const IonPicker = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonPickerElement, IonPickerEvents>({
        tagName: 'ion-picker',
        elementClass: IonPickerElement,
        react: React,
        events: {} as IonPickerEvents,
        defineCustomElement: defineIonPicker
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonPickerElement, IonPickerEvents>({
        tagName: 'ion-picker',
        renderToString,
    });

type IonPickerColumnEvents = { onIonChange: EventName<IonPickerColumnCustomEvent<PickerColumnChangeEventDetail>> };

export const IonPickerColumn = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonPickerColumnElement, IonPickerColumnEvents>({
        tagName: 'ion-picker-column',
        elementClass: IonPickerColumnElement,
        react: React,
        events: { onIonChange: 'ionChange' } as IonPickerColumnEvents,
        defineCustomElement: defineIonPickerColumn
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonPickerColumnElement, IonPickerColumnEvents>({
        tagName: 'ion-picker-column',
        renderToString,
    });

type IonPickerColumnOptionEvents = NonNullable<unknown>;

export const IonPickerColumnOption = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonPickerColumnOptionElement, IonPickerColumnOptionEvents>({
        tagName: 'ion-picker-column-option',
        elementClass: IonPickerColumnOptionElement,
        react: React,
        events: {} as IonPickerColumnOptionEvents,
        defineCustomElement: defineIonPickerColumnOption
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonPickerColumnOptionElement, IonPickerColumnOptionEvents>({
        tagName: 'ion-picker-column-option',
        renderToString,
    });

type IonProgressBarEvents = NonNullable<unknown>;

export const IonProgressBar = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonProgressBarElement, IonProgressBarEvents>({
        tagName: 'ion-progress-bar',
        elementClass: IonProgressBarElement,
        react: React,
        events: {} as IonProgressBarEvents,
        defineCustomElement: defineIonProgressBar
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonProgressBarElement, IonProgressBarEvents>({
        tagName: 'ion-progress-bar',
        renderToString,
    });

type IonRadioEvents = {
    onIonFocus: EventName<CustomEvent<void>>,
    onIonBlur: EventName<CustomEvent<void>>
};

export const IonRadio = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonRadioElement, IonRadioEvents>({
        tagName: 'ion-radio',
        elementClass: IonRadioElement,
        react: React,
        events: {
            onIonFocus: 'ionFocus',
            onIonBlur: 'ionBlur'
        } as IonRadioEvents,
        defineCustomElement: defineIonRadio
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonRadioElement, IonRadioEvents>({
        tagName: 'ion-radio',
        renderToString,
    });

type IonRadioGroupEvents = { onIonChange: EventName<IonRadioGroupCustomEvent<RadioGroupChangeEventDetail>> };

export const IonRadioGroup = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonRadioGroupElement, IonRadioGroupEvents>({
        tagName: 'ion-radio-group',
        elementClass: IonRadioGroupElement,
        react: React,
        events: { onIonChange: 'ionChange' } as IonRadioGroupEvents,
        defineCustomElement: defineIonRadioGroup
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonRadioGroupElement, IonRadioGroupEvents>({
        tagName: 'ion-radio-group',
        renderToString,
    });

type IonRangeEvents = {
    onIonChange: EventName<IonRangeCustomEvent<RangeChangeEventDetail>>,
    onIonInput: EventName<IonRangeCustomEvent<RangeChangeEventDetail>>,
    onIonFocus: EventName<CustomEvent<void>>,
    onIonBlur: EventName<CustomEvent<void>>,
    onIonKnobMoveStart: EventName<IonRangeCustomEvent<RangeKnobMoveStartEventDetail>>,
    onIonKnobMoveEnd: EventName<IonRangeCustomEvent<RangeKnobMoveEndEventDetail>>
};

export const IonRange = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonRangeElement, IonRangeEvents>({
        tagName: 'ion-range',
        elementClass: IonRangeElement,
        react: React,
        events: {
            onIonChange: 'ionChange',
            onIonInput: 'ionInput',
            onIonFocus: 'ionFocus',
            onIonBlur: 'ionBlur',
            onIonKnobMoveStart: 'ionKnobMoveStart',
            onIonKnobMoveEnd: 'ionKnobMoveEnd'
        } as IonRangeEvents,
        defineCustomElement: defineIonRange
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonRangeElement, IonRangeEvents>({
        tagName: 'ion-range',
        renderToString,
    });

type IonRefresherEvents = {
    onIonRefresh: EventName<IonRefresherCustomEvent<RefresherEventDetail>>,
    onIonPull: EventName<CustomEvent<void>>,
    onIonStart: EventName<CustomEvent<void>>
};

export const IonRefresher = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonRefresherElement, IonRefresherEvents>({
        tagName: 'ion-refresher',
        elementClass: IonRefresherElement,
        react: React,
        events: {
            onIonRefresh: 'ionRefresh',
            onIonPull: 'ionPull',
            onIonStart: 'ionStart'
        } as IonRefresherEvents,
        defineCustomElement: defineIonRefresher
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonRefresherElement, IonRefresherEvents>({
        tagName: 'ion-refresher',
        renderToString,
    });

type IonRefresherContentEvents = NonNullable<unknown>;

export const IonRefresherContent = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonRefresherContentElement, IonRefresherContentEvents>({
        tagName: 'ion-refresher-content',
        elementClass: IonRefresherContentElement,
        react: React,
        events: {} as IonRefresherContentEvents,
        defineCustomElement: defineIonRefresherContent
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonRefresherContentElement, IonRefresherContentEvents>({
        tagName: 'ion-refresher-content',
        renderToString,
    });

type IonReorderEvents = NonNullable<unknown>;

export const IonReorder = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonReorderElement, IonReorderEvents>({
        tagName: 'ion-reorder',
        elementClass: IonReorderElement,
        react: React,
        events: {} as IonReorderEvents,
        defineCustomElement: defineIonReorder
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonReorderElement, IonReorderEvents>({
        tagName: 'ion-reorder',
        renderToString,
    });

type IonReorderGroupEvents = { onIonItemReorder: EventName<IonReorderGroupCustomEvent<ItemReorderEventDetail>> };

export const IonReorderGroup = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonReorderGroupElement, IonReorderGroupEvents>({
        tagName: 'ion-reorder-group',
        elementClass: IonReorderGroupElement,
        react: React,
        events: { onIonItemReorder: 'ionItemReorder' } as IonReorderGroupEvents,
        defineCustomElement: defineIonReorderGroup
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonReorderGroupElement, IonReorderGroupEvents>({
        tagName: 'ion-reorder-group',
        renderToString,
    });

type IonRippleEffectEvents = NonNullable<unknown>;

export const IonRippleEffect = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonRippleEffectElement, IonRippleEffectEvents>({
        tagName: 'ion-ripple-effect',
        elementClass: IonRippleEffectElement,
        react: React,
        events: {} as IonRippleEffectEvents,
        defineCustomElement: defineIonRippleEffect
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonRippleEffectElement, IonRippleEffectEvents>({
        tagName: 'ion-ripple-effect',
        renderToString,
    });

type IonRowEvents = NonNullable<unknown>;

export const IonRow = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonRowElement, IonRowEvents>({
        tagName: 'ion-row',
        elementClass: IonRowElement,
        react: React,
        events: {} as IonRowEvents,
        defineCustomElement: defineIonRow
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonRowElement, IonRowEvents>({
        tagName: 'ion-row',
        renderToString,
    });

type IonSearchbarEvents = {
    onIonInput: EventName<IonSearchbarCustomEvent<SearchbarInputEventDetail>>,
    onIonChange: EventName<IonSearchbarCustomEvent<SearchbarChangeEventDetail>>,
    onIonCancel: EventName<CustomEvent<void>>,
    onIonClear: EventName<CustomEvent<void>>,
    onIonBlur: EventName<CustomEvent<void>>,
    onIonFocus: EventName<CustomEvent<void>>
};

export const IonSearchbar = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonSearchbarElement, IonSearchbarEvents>({
        tagName: 'ion-searchbar',
        elementClass: IonSearchbarElement,
        react: React,
        events: {
            onIonInput: 'ionInput',
            onIonChange: 'ionChange',
            onIonCancel: 'ionCancel',
            onIonClear: 'ionClear',
            onIonBlur: 'ionBlur',
            onIonFocus: 'ionFocus'
        } as IonSearchbarEvents,
        defineCustomElement: defineIonSearchbar
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonSearchbarElement, IonSearchbarEvents>({
        tagName: 'ion-searchbar',
        renderToString,
    });

type IonSegmentEvents = { onIonChange: EventName<IonSegmentCustomEvent<SegmentChangeEventDetail>> };

export const IonSegment = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonSegmentElement, IonSegmentEvents>({
        tagName: 'ion-segment',
        elementClass: IonSegmentElement,
        react: React,
        events: { onIonChange: 'ionChange' } as IonSegmentEvents,
        defineCustomElement: defineIonSegment
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonSegmentElement, IonSegmentEvents>({
        tagName: 'ion-segment',
        renderToString,
    });

type IonSegmentButtonEvents = NonNullable<unknown>;

export const IonSegmentButton = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonSegmentButtonElement, IonSegmentButtonEvents>({
        tagName: 'ion-segment-button',
        elementClass: IonSegmentButtonElement,
        react: React,
        events: {} as IonSegmentButtonEvents,
        defineCustomElement: defineIonSegmentButton
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonSegmentButtonElement, IonSegmentButtonEvents>({
        tagName: 'ion-segment-button',
        renderToString,
    });

type IonSelectEvents = {
    onIonChange: EventName<IonSelectCustomEvent<SelectChangeEventDetail>>,
    onIonCancel: EventName<CustomEvent<void>>,
    onIonDismiss: EventName<CustomEvent<void>>,
    onIonFocus: EventName<CustomEvent<void>>,
    onIonBlur: EventName<CustomEvent<void>>
};

export const IonSelect = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonSelectElement, IonSelectEvents>({
        tagName: 'ion-select',
        elementClass: IonSelectElement,
        react: React,
        events: {
            onIonChange: 'ionChange',
            onIonCancel: 'ionCancel',
            onIonDismiss: 'ionDismiss',
            onIonFocus: 'ionFocus',
            onIonBlur: 'ionBlur'
        } as IonSelectEvents,
        defineCustomElement: defineIonSelect
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonSelectElement, IonSelectEvents>({
        tagName: 'ion-select',
        renderToString,
    });

type IonSelectOptionEvents = NonNullable<unknown>;

export const IonSelectOption = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonSelectOptionElement, IonSelectOptionEvents>({
        tagName: 'ion-select-option',
        elementClass: IonSelectOptionElement,
        react: React,
        events: {} as IonSelectOptionEvents,
        defineCustomElement: defineIonSelectOption
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonSelectOptionElement, IonSelectOptionEvents>({
        tagName: 'ion-select-option',
        renderToString,
    });

type IonSkeletonTextEvents = NonNullable<unknown>;

export const IonSkeletonText = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonSkeletonTextElement, IonSkeletonTextEvents>({
        tagName: 'ion-skeleton-text',
        elementClass: IonSkeletonTextElement,
        react: React,
        events: {} as IonSkeletonTextEvents,
        defineCustomElement: defineIonSkeletonText
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonSkeletonTextElement, IonSkeletonTextEvents>({
        tagName: 'ion-skeleton-text',
        renderToString,
    });

type IonSpinnerEvents = NonNullable<unknown>;

export const IonSpinner = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonSpinnerElement, IonSpinnerEvents>({
        tagName: 'ion-spinner',
        elementClass: IonSpinnerElement,
        react: React,
        events: {} as IonSpinnerEvents,
        defineCustomElement: defineIonSpinner
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonSpinnerElement, IonSpinnerEvents>({
        tagName: 'ion-spinner',
        renderToString,
    });

type IonSplitPaneEvents = { onIonSplitPaneVisible: EventName<CustomEvent<{ visible: boolean }>> };

export const IonSplitPane = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonSplitPaneElement, IonSplitPaneEvents>({
        tagName: 'ion-split-pane',
        elementClass: IonSplitPaneElement,
        react: React,
        events: { onIonSplitPaneVisible: 'ionSplitPaneVisible' } as IonSplitPaneEvents,
        defineCustomElement: defineIonSplitPane
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonSplitPaneElement, IonSplitPaneEvents>({
        tagName: 'ion-split-pane',
        renderToString,
    });

type IonTabEvents = NonNullable<unknown>;

export const IonTab = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonTabElement, IonTabEvents>({
        tagName: 'ion-tab',
        elementClass: IonTabElement,
        react: React,
        events: {} as IonTabEvents,
        defineCustomElement: defineIonTab
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonTabElement, IonTabEvents>({
        tagName: 'ion-tab',
        renderToString,
    });

type IonTextEvents = NonNullable<unknown>;

export const IonText = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonTextElement, IonTextEvents>({
        tagName: 'ion-text',
        elementClass: IonTextElement,
        react: React,
        events: {} as IonTextEvents,
        defineCustomElement: defineIonText
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonTextElement, IonTextEvents>({
        tagName: 'ion-text',
        renderToString,
    });

type IonTextareaEvents = {
    onIonChange: EventName<IonTextareaCustomEvent<TextareaChangeEventDetail>>,
    onIonInput: EventName<IonTextareaCustomEvent<TextareaInputEventDetail>>,
    onIonBlur: EventName<IonTextareaCustomEvent<FocusEvent>>,
    onIonFocus: EventName<IonTextareaCustomEvent<FocusEvent>>
};

export const IonTextarea = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonTextareaElement, IonTextareaEvents>({
        tagName: 'ion-textarea',
        elementClass: IonTextareaElement,
        react: React,
        events: {
            onIonChange: 'ionChange',
            onIonInput: 'ionInput',
            onIonBlur: 'ionBlur',
            onIonFocus: 'ionFocus'
        } as IonTextareaEvents,
        defineCustomElement: defineIonTextarea
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonTextareaElement, IonTextareaEvents>({
        tagName: 'ion-textarea',
        renderToString,
    });

type IonThumbnailEvents = NonNullable<unknown>;

export const IonThumbnail = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonThumbnailElement, IonThumbnailEvents>({
        tagName: 'ion-thumbnail',
        elementClass: IonThumbnailElement,
        react: React,
        events: {} as IonThumbnailEvents,
        defineCustomElement: defineIonThumbnail
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonThumbnailElement, IonThumbnailEvents>({
        tagName: 'ion-thumbnail',
        renderToString,
    });

type IonTitleEvents = NonNullable<unknown>;

export const IonTitle = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonTitleElement, IonTitleEvents>({
        tagName: 'ion-title',
        elementClass: IonTitleElement,
        react: React,
        events: {} as IonTitleEvents,
        defineCustomElement: defineIonTitle
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonTitleElement, IonTitleEvents>({
        tagName: 'ion-title',
        renderToString,
    });

type IonToggleEvents = {
    onIonChange: EventName<IonToggleCustomEvent<ToggleChangeEventDetail>>,
    onIonFocus: EventName<CustomEvent<void>>,
    onIonBlur: EventName<CustomEvent<void>>
};

export const IonToggle = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonToggleElement, IonToggleEvents>({
        tagName: 'ion-toggle',
        elementClass: IonToggleElement,
        react: React,
        events: {
            onIonChange: 'ionChange',
            onIonFocus: 'ionFocus',
            onIonBlur: 'ionBlur'
        } as IonToggleEvents,
        defineCustomElement: defineIonToggle
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonToggleElement, IonToggleEvents>({
        tagName: 'ion-toggle',
        renderToString,
    });

type IonToolbarEvents = NonNullable<unknown>;

export const IonToolbar = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IonToolbarElement, IonToolbarEvents>({
        tagName: 'ion-toolbar',
        elementClass: IonToolbarElement,
        react: React,
        events: {} as IonToolbarEvents,
        defineCustomElement: defineIonToolbar
    })
    : /*@__PURE__*/ createComponentForServerSideRendering<IonToolbarElement, IonToolbarEvents>({
        tagName: 'ion-toolbar',
        renderToString,
    });
