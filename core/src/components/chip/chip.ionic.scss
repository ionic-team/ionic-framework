@use "../../themes/ionic/ionic.globals.scss" as globals;
@use "../../foundations/ionic.vars.scss" as tokens;

// Ionic Chip
// --------------------------------------------------

// TODO(ROU-4870): there is no token yet for these ones, but it should be created in the future, once UX team has figma tokens done
$ionic-states-focus-primary: #9ec4fd;
$ionic-states-hover: #{rgba(#05080f, 0.16)}; // We should review how to make this in the future, as we are setting scss variables with a var() and fallback, and it doesn't work inside a rgba().

:host {
  --background: #{globals.$ionic-color-neutral-100};
  --color: #{globals.$ionic-color-neutral-900};
  --focus-ring-color: #{$ionic-states-focus-primary};
  --focus-ring-width: #{globals.$ionic-border-size-050};

  @include globals.font-smoothing;
  @include globals.padding(globals.$ionic-space-150, globals.$ionic-space-200);
  @include globals.border-radius(var(--border-radius));

  display: inline-flex;

  position: relative;

  align-items: center;
  justify-content: center;

  gap: globals.$ionic-space-100;

  background: var(--background);
  color: var(--color);

  font-family: globals.$ionic-font-family;
  font-weight: globals.$ionic-font-weight-medium;

  line-height: globals.$ionic-line-height-full;

  cursor: pointer;

  overflow: hidden;

  box-sizing: border-box;

  vertical-align: middle;
}

// Outline Chip
// ---------------------------------------------

:host(.chip-outline) {
  --background: transparent;
  border-width: globals.$ionic-border-size-025;

  border-color: globals.$ionic-color-neutral-100;
}

// Chip: Focus
// ---------------------------------------------

:host(.ion-focused) {
  outline: var(--focus-ring-width) solid var(--focus-ring-color);
  outline-offset: var(--focus-ring-width);
}

// Chip: Hover
// ---------------------------------------------

@media (any-hover: hover) {
  :host(:hover) {
    --background: #{$ionic-states-hover};
  }
}

// Chip: Disabled
// ---------------------------------------------

:host(.chip-disabled) {
  opacity: 0.6;
  pointer-events: none;
}

// Chip Shapes
// ---------------------------------------------

:host(.chip-soft) {
  --border-radius: #{globals.$ionic-border-radius-100};
}

:host(.chip-round) {
  --border-radius: #{globals.$ionic-border-radius-400};
}

:host(.chip-rectangular) {
  --border-radius: #{globals.$ionic-border-radius-0};
}

// Chip Icon
// ---------------------------------------------
::slotted(ion-icon) {
  font-size: globals.$ionic-font-size-400;
}

// Size
// ---------------------------------------------

:host(.chip-small) {
  min-height: 24px;

  font-size: #{tokens.$ionic-font-size-300};
}

:host(.chip-large) {
  min-height: 32px;

  font-size: globals.$ionic-font-size-500;
}
