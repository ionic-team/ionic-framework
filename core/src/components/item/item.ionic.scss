@use "../../themes/ionic/ionic.globals.scss" as globals;
@use "./item.common";
@use "./item.ionic.vars" as vars;

// Item
// --------------------------------------------------

:host {
  --background: #{vars.$item-ionic-background};
  --background-activated: #{globals.$ionic-color-neutral-200};
  --border-color: #{globals.$ionic-color-neutral-300};
  --border-style: #{globals.$ionic-border-style-solid};
  --border-width: #{0 0 globals.$ionic-border-size-025 0};
  --min-height: #{globals.$ionic-scale-1800};
  --padding-top: #{globals.$ionic-space-200};
  --padding-end: #{globals.$ionic-space-400};
  --padding-bottom: #{globals.$ionic-space-200};
  --padding-start: #{globals.$ionic-space-400};

  font-family: globals.$ionic-font-family;
}

// Inner Item
// --------------------------------------------------

.item-inner {
  // This prevents the padding/margin from
  // being excluded from the height calculation.
  min-height: initial;
}

// Ionic Item Slots
// --------------------------------------------------

slot[name="start"]::slotted(*) {
  @include globals.margin(null, #{globals.$ionic-space-400}, null, null);
}

slot[name="end"]::slotted(*) {
  @include globals.margin(null, null, null, #{globals.$ionic-space-400});
}

// Item: Disabled
// --------------------------------------------------

:host(.item-disabled) {
  opacity: 0.6;
}

// Item: Activated
// --------------------------------------------------

:host(.ion-activated) .item-native {
  background: var(--background-activated);
}

// Item: Focused
// --------------------------------------------------

:host(.ion-focused) .item-native {
  // This prevents the focus ring from clipping.
  overflow: visible;
}

:host(.ion-focused) .item-native::after {
  @include globals.position(0, 0, 0, 0);

  position: absolute;

  border-width: globals.$ionic-border-size-050;
  border-style: globals.$ionic-border-style-solid;
  border-color: globals.$ionic-state-focus-1;

  content: "";
}
