@use "../../themes/ionic/ionic.globals.scss" as globals;
@use "./tab-button.common";
@use "../../themes/mixins" as mixins;

// Ionic Tab Button
// --------------------------------------------------------------

:host {
  --focus-ring-color: #{globals.$ion-border-focus-default};
  --focus-ring-width: #{globals.$ion-border-radius-025};

  align-content: center;

  min-height: globals.$ion-scale-1200;
  max-height: globals.$ion-scale-1800;

  font-size: globals.$ion-font-size-300;
  font-weight: globals.$ion-font-weight-medium;

  line-height: globals.$ion-font-line-height-500;
}

// Tab Button: Native
// --------------------------------------------------

.button-native {
  @include globals.border-radius(inherit);
  @include globals.margin(0);
  @include globals.padding(var(--padding-top), var(--padding-end), var(--padding-bottom), var(--padding-start));
  @include globals.text-inherit();

  overflow: visible;
}

.button-native::after {
  @include globals.button-state();
}

// Tab Button Focused
// -------------------------------------------------------------------------------

.button-native {
  min-width: globals.$ion-scale-1200;

  overflow: visible;

  &::after {
    @include globals.border-radius(inherit);
  }
}

// Only show the focus ring when the tab button is focused
:host(.ion-focused) .button-native {
  &::after {
    outline: var(--focus-ring-width) solid var(--focus-ring-color);
  }
}

// Tab Button Activated
// -------------------------------------------------------------------------------

:host(.ion-activated) .button-native::after {
  background: var(--background-activated);

  opacity: var(--background-activated-opacity);
}

// Tab Button Slots
// -------------------------------------------------------------------------------

// Icon

::slotted(ion-icon) {
  width: globals.$ion-scale-600;
  height: globals.$ion-scale-600;
}

// Tab Button Shapes
// -------------------------------------------------------------------------------

:host(.tab-button-shape-soft) {
  @include globals.border-radius(globals.$ion-border-radius-200);
}

:host(.tab-button-shape-round) {
  @include globals.border-radius(globals.$ion-border-radius-400);
}

:host(.tab-button-shape-rectangular) {
  @include globals.border-radius(globals.$ion-border-radius-0);
}

// Tab Button: Badge
// --------------------------------------------------

:host ::slotted(ion-badge.badge-xxsmall),
:host ::slotted(ion-badge.badge-xsmall),
:host ::slotted(ion-badge.badge-small),
:host ::slotted(ion-badge.badge-medium),
:host ::slotted(ion-badge.badge-large),
:host ::slotted(ion-badge.badge-xlarge) {
  min-width: globals.$ion-scale-400;
  height: globals.$ion-scale-400;

  font-size: globals.$ion-font-size-300;

  line-height: globals.$ion-font-line-height-400;
}

:host ::slotted(ion-badge:empty) {
  @include mixins.padding(0, 0);

  min-width: globals.$ion-scale-200;
  height: globals.$ion-scale-200;
}

:host ::slotted(ion-badge) {
  @include mixins.position($start: calc(50% + globals.$ion-scale-300));
}

:host ::slotted(ion-badge.badge-vertical-top) {
  @include mixins.position($top: -2px);
}

:host ::slotted(ion-badge.badge-vertical-top:empty) {
  @include mixins.position($top: calc(globals.$ion-scale-100 * -1));
}

:host ::slotted(ion-badge.badge-vertical-bottom) {
  @include mixins.position($top: calc(50% - globals.$ion-scale-200));
}

:host ::slotted(ion-badge.badge-vertical-bottom:empty) {
  @include mixins.position($top: calc(50% - globals.$ion-scale-100));
}

:host ::slotted(ion-badge[vertical]:not(:empty)) {
  @include mixins.padding(
    globals.$ion-scale-100,
    globals.$ion-scale-100,
    globals.$ion-scale-100,
    globals.$ion-scale-100
  );

  display: flex;

  align-items: center;
  justify-content: center;

  min-width: globals.$ion-scale-400;
}

:host(.tab-layout-icon-bottom) ::slotted(ion-badge.badge-vertical-top) {
  @include mixins.position($top: calc(50% - globals.$ion-scale-100));
}

:host(.tab-layout-icon-bottom) ::slotted(ion-badge.badge-vertical-bottom) {
  @include mixins.position($top: calc(50% + globals.$ion-scale-100));
}

:host(.tab-layout-icon-bottom) ::slotted(ion-badge.badge-vertical-bottom:empty) {
  @include mixins.position($top: calc(50% + 14px));
}
