@import "../../themes/ionic.globals";

// Input OTP
// --------------------------------------------------

:host {
  /**
   * @prop --background: Background color of the input boxes
   * @prop --background-focused: Background color when focused
   *
   * @prop --border-radius: Border radius of the input boxes
   *
   * @prop --border-width: Border width of the input boxes
   * @prop --border-color: Border color of the input boxes
   * @prop --border-color-focused: Border color when focused
   *
   * @prop --color: Text color of the input
   *
   * @prop --margin-top: Top margin of the input group
   * @prop --margin-end: Right margin if direction is left-to-right, and left margin if direction is right-to-left of the input group
   * @prop --margin-bottom: Bottom margin of the input group
   * @prop --margin-start: Left margin if direction is left-to-right, and right margin if direction is right-to-left of the input group
   *
   * @prop --padding-top: Top padding of the input group
   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the input group
   * @prop --padding-bottom: Bottom padding of the input group
   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the input group
   *
   * @prop --height: Height of input boxes
   * @prop --width: Width of input boxes
   * @prop --min-width: Minimum width of input boxes
   *
   * @prop --separator-color: Color of the separator between boxes
   * @prop --separator-width: Width of the separator between boxes
   * @prop --separator-height: Height of the separator between boxes
   * @prop --separator-border-radius: Border radius of the separator between boxes
   *
   * @prop --highlight-color-invalid: Color used for the invalid state
   */
  --margin-top: 0;
  --margin-end: 0;
  --margin-bottom: 0;
  --margin-start: 0;
  --padding-top: 16px;
  --padding-end: 0;
  --padding-bottom: 16px;
  --padding-start: 0;
  --min-width: 40px;
  --separator-width: 8px;
  --separator-height: var(--separator-width);
  --separator-border-radius: 999px;
  --separator-color: #{$background-color-step-150};
  --background-focused: var(--background);
  --border-color-focused: #{ion-color(primary, base, 0.4)};
  --highlight-color-invalid: #{ion-color(danger, base)};

  display: block;
  position: relative;
}

.input-otp-group {
  @include margin(var(--margin-top), var(--margin-end), var(--margin-bottom), var(--margin-start));
  @include padding(var(--padding-top), var(--padding-end), var(--padding-bottom), var(--padding-start));

  display: flex;

  align-items: center;
  justify-content: center;
}

.native-wrapper {
  display: flex;

  align-items: center;
  justify-content: center;

  min-width: var(--min-width);
}

.native-input {
  @include border-radius(var(--border-radius));

  width: var(--width);

  // Required to shrink the input box width
  min-width: inherit;
  height: var(--height);

  border-width: var(--border-width);
  border-style: solid;
  border-color: var(--border-color);

  background: var(--background, var(--ion-background-color));
  color: var(--color, var(--ion-text-color));

  font-size: inherit;

  text-align: center;
  appearance: none;
}

.input-otp-description {
  color: $text-color-step-400;

  font-size: 12px;
  font-weight: 500;

  line-height: 20px;

  text-align: center;
}

.input-otp-separator {
  @include border-radius(var(--separator-border-radius));

  width: var(--separator-width);
  height: var(--separator-height);

  background: var(--separator-color);
}

// Sizes
// --------------------------------------------------

:host(.input-otp-size-small) {
  --width: 40px;
  --height: 40px;

  font-size: 0.875em;
}

:host(.input-otp-size-small) .input-otp-group {
  gap: 8px;
}

:host(.input-otp-size-small) .input-otp-separator {
  @include margin-horizontal(8px, null);
}

:host(.input-otp-size-medium) {
  --width: 48px;
  --height: 48px;

  font-size: 1em;
}

:host(.input-otp-size-large) {
  --width: 56px;
  --height: 56px;

  font-size: 1.125em;
}

:host(.input-otp-size-medium) .input-otp-group,
:host(.input-otp-size-large) .input-otp-group {
  gap: 12px;
}

:host(.input-otp-size-medium) .input-otp-separator,
:host(.input-otp-size-large) .input-otp-separator {
  @include margin-horizontal(12px, null);
}


// Shapes
// --------------------------------------------------

:host(.input-otp-shape-round) {
  --border-radius: 16px;
}

:host(.input-otp-shape-soft) {
  --border-radius: 8px;
}

:host(.input-otp-shape-rectangular) {
  --border-radius: 0;
}

// Fills
// --------------------------------------------------

:host(.input-otp-fill-outline) {
  --border-color: #{$background-color-step-350};
  --background: none;
}

:host(.input-otp-fill-solid) {
  --border-color: #{$background-color-step-100};
  --background: var(--border-color);
}

// States
// --------------------------------------------------

:host(.input-otp-disabled),
:host(.input-otp-disabled) .native-input:disabled {
  cursor: not-allowed;
}

:host(.has-focus) .native-input:focus {
  border-width: 2px;
  border-color: var(--border-color-focused);

  outline: none;

  background: var(--background-focused);
}

:host(.ion-invalid) .native-input {
  border-color: var(--highlight-color-invalid);
}

// Colors
// --------------------------------------------------

:host(.input-otp-fill-outline.ion-color) .native-input {
  border-color: current-color(base, 0.3);
}

:host(.input-otp-fill-outline.ion-color.has-focus) .native-input:focus {
  border-color: current-color(base, 0.4);
}

:host(.input-otp-fill-solid.ion-color) .native-input {
  border-color: transparent;

  background: current-color(base, 0.08);
  color: current-color(shade);
}

:host(.input-otp-fill-solid.ion-color.has-focus) .native-input:focus {
  border-color: current-color(base, 0.4);
}
