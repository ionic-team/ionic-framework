@use "../../themes/ionic/ionic.globals.scss" as globals;
@use "./accordion.common";

// Ionic Accordion
// --------------------------------------------------

:host {
  position: relative;
}

// The border is added to the ::after element
// to properly inset the border relative to the entire
// accordion, rather than just the header.
:host::after {
  @include globals.margin(null, globals.$ion-space-400, null, globals.$ion-space-400);
  @include globals.position(null, 0, 0, 0);

  display: block;

  position: absolute;

  height: globals.$ion-border-size-025;

  background-color: globals.$ion-primitives-neutral-300;

  content: "";

  z-index: 3;
}

:host(.accordion-animated) {
  transition: all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);
}

:host(.accordion-animated) #content {
  transition: max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);
}

// Accordion Header
// --------------------------------------------------

// The border is removed from the item in the header because
// we are adding a border to the ::after element of the accordion.
::slotted(ion-item[slot="header"]) {
  --border-radius: inherit;
  --color: #{globals.$ion-primitives-neutral-1200};
  --border-width: 0;
  --inner-border-width: 0;
  --min-height: #{globals.$ion-scale-700};
  --padding-top: #{globals.$ion-space-300};
  --padding-end: #{globals.$ion-space-400};
  --padding-bottom: #{globals.$ion-space-300};
  --padding-start: #{globals.$ion-space-400};

  @include globals.typography(globals.$ion-heading-h6-medium);
}

// Accordion Content
// --------------------------------------------------

#content {
  @include globals.padding(null, globals.$ion-space-400, globals.$ion-space-300, globals.$ion-space-400);
  @include globals.typography(globals.$ion-body-md-regular);

  color: globals.$ion-primitives-neutral-1000;
}

// Disabled Accordion
// --------------------------------------------------

:host(.accordion-disabled)::before {
  @include globals.border-radius(inherit);
  @include globals.disabled-state();

  z-index: 2;
}
