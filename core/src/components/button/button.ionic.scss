@use "../../themes/ionic/ionic.globals.scss" as globals;
@use "./button.common";

// Ionic Button
// -------------------------------------------------------------------------------
:host {
  --padding-bottom: var(--padding-top);
  --padding-end: #{globals.$ion-space-500};
  --padding-start: var(--padding-end);
  --padding-top: #{globals.$ion-space-0};
  --focus-ring-color: #{globals.$ion-border-focus-default};
  --focus-ring-width: #{globals.$ion-border-size-050};

  position: relative;

  min-height: globals.$ion-scale-1000;

  font-family: globals.$ion-font-family;
  font-size: globals.$ion-font-size-350;

  // Target area
  &::after {
    @include globals.position(50%, 0, null, 0);
    position: absolute;

    height: 100%;
    min-height: globals.$ion-scale-1200;

    transform: translateY(-50%);

    content: "";

    cursor: pointer;

    z-index: 1;
  }
}

// Button Fills
// -------------------------------------------------------------------------------

// Default Clear Color
:host(.button-clear) {
  --color: #{ion-color(primary, foreground)};
}


// Solid Button
// --------------------------------------------------

:host(.button-solid) {
  --background-activated: #{globals.ion-color(primary, shade)};
  --background-hover: #{globals.ion-color(primary, shade)};
  --background-focused: transparent;
  --background-hover-opacity: 1;
  --background: #{globals.ion-color(primary, base)};
  --color: #{globals.ion-color(primary, contrast)};
  --ripple-opacity: var(--background-activated-opacity, 1);
  --ripple-color: var(--background-activated);
}

// Outline Button
// --------------------------------------------------

:host(.button-outline) {
  --border-width: #{globals.$ion-border-size-025};
  --border-style: #{globals.$ion-border-style-solid};
  --background-activated: #{globals.$ion-bg-neutral-subtlest-press};
  --background-focused: transparent;
  --background-hover: #{globals.$ion-bg-neutral-subtlest-press};
  --background-hover-opacity: 1;
  --border-color: #{globals.ion-color(primary, base)};
  --color: #{globals.ion-color(primary, base)};
  --ripple-opacity: var(--background-activated-opacity, 1);
  --ripple-color: var(--background-activated);
}

// Clear Button
// --------------------------------------------------

:host(.button-clear) {
  --background-activated: #{globals.$ion-bg-neutral-subtlest-press};
  --background-focused: transparent;
  --background-hover: #{globals.$ion-bg-neutral-subtlest-press};
  --background-hover-opacity: 1;
  --color: #{globals.ion-color(primary, foreground)};
  --ripple-opacity: var(--background-activated-opacity, 1);
  --ripple-color: var(--background-activated);
}

// Ripple Effect
// -------------------------------------------------------------------------------

:host(.button-solid.ion-color) ion-ripple-effect {
  color: globals.current-color(shade);
}

:host(.button-outline.ion-color) ion-ripple-effect,
:host(.button-clear.ion-color) ion-ripple-effect {
  color: globals.$ion-primitives-neutral-200;
}

// Button Sizes
// -------------------------------------------------------------------------------

/* Extra Small Button */
:host(.button-xsmall) {
  --padding-top: #{globals.$ion-space-100};
  --padding-end: #{globals.$ion-space-300};

  min-height: globals.$ion-space-600;

  font-size: globals.$ion-font-size-300;
}

/* Small Button */
:host(.button-small) {
  --padding-top: #{globals.$ion-space-200};
  --padding-end: #{globals.$ion-space-400};

  min-height: #{globals.$ion-scale-800};

  font-size: #{globals.$ion-font-size-300};
}

/* Large Button */
:host(.button-large) {
  --padding-top: #{globals.$ion-space-400};
  --padding-end: #{globals.$ion-space-600};

  min-height: #{globals.$ion-scale-1200};

  font-size: #{globals.$ion-font-size-400};
}

/* Extra Large Button */
:host(.button-xlarge) {
  --padding-top: #{globals.$ion-space-400};
  --padding-end: #{globals.$ion-space-800};

  min-height: #{globals.$ion-scale-1400};

  font-size: #{globals.$ion-font-size-500};
}

// Button with Icons
// -------------------------------------------------------------------------------

/* Button containing only an icon */
::slotted(ion-icon[slot="start"]),
::slotted(ion-icon[slot="end"]),
::slotted(ion-icon[slot="icon-only"]) {
  font-size: globals.$ion-font-size-400;
}

:host(.button-xsmall),
:host(.button-small),
:host(.button-large),
:host(.button-xlarge) {
  ::slotted(ion-icon[slot="start"]),
  ::slotted(ion-icon[slot="end"]),
  ::slotted(ion-icon[slot="icon-only"]) {
    font-size: inherit;
  }
}

:host(.button-has-icon-only) {
  --padding-end: var(--padding-top);

  aspect-ratio: 1 / 1;
}

// Button with Spinner
// -------------------------------------------------------------------------------
::slotted(ion-spinner) {
  --color: currentColor;
}

/* Button containing only a spinner */
::slotted(ion-spinner[slot="start"]),
::slotted(ion-spinner[slot="end"]),
::slotted(ion-spinner[slot="icon-only"]) {
  width: globals.$ion-space-500;
  height: globals.$ion-space-500;
}

:host(.button-xlarge) ::slotted(ion-spinner) {
  width: globals.$ion-space-600;
  height: globals.$ion-space-600;
}

// Button Shapes
// -------------------------------------------------------------------------------

// Soft Button
// --------------------------------------------------

:host(.button-soft) {
  --border-radius: #{globals.$ion-border-radius-200};
}

:host(.button-soft.button-xsmall),
:host(.button-soft.button-small) {
  --border-radius: #{globals.$ion-border-radius-100};
}

// Round Button
// --------------------------------------------------

:host(.button-round) {
  --border-radius: #{globals.$ion-border-radius-full};
}

// Rectangular Button
// --------------------------------------------------

:host(.button-rectangular) {
  --border-radius: #{globals.$ion-border-radius-0};
}

// Button: Focus
// -------------------------------------------------------------------------------

// Only show the focus ring when the button is focused
:host(.ion-focused) .button-native {
  outline: var(--focus-ring-width) globals.$ion-border-style-solid var(--focus-ring-color);
  outline-offset: globals.$ion-border-size-050;
}

// Button: Activated
// --------------------------------------------------

:host(.button-solid.ion-color.ion-activated) .button-native::after {
  background: globals.current-color(shade);
}

:host(.ion-activated) .button-native:has(ion-ripple-effect)::after,
:host(.button-solid.ion-color.ion-activated) .button-native:has(ion-ripple-effect)::after {
  background: transparent;
}

// Button: Hover
// --------------------------------------------------

@media (any-hover: hover) {
  :host(.button-solid.ion-color:hover) .button-native::after {
    background: globals.current-color(shade);
  }
}

// Button: Disabled
// --------------------------------------------------

:host(.button-disabled) .button-native::after {
  @include globals.disabled-state();

  width: inherit;
  height: inherit;
}

// Button Icons
// --------------------------------------------------

::slotted(ion-icon) {
  font-size: globals.$ion-font-size-500;
}

:host(.button-xsmall) ::slotted(ion-icon[slot="start"]),
:host(.button-xsmall) ::slotted(ion-spinner[slot="start"]),
:host(.button-small) ::slotted(ion-icon[slot="start"]),
:host(.button-small) ::slotted(ion-spinner[slot="start"]) {
  @include globals.margin-horizontal(null, globals.$ion-space-200);
}

::slotted(ion-icon[slot="start"]),
::slotted(ion-spinner[slot="start"]) {
  @include globals.margin-horizontal(null, globals.$ion-space-250);
}

:host(.button-large) ::slotted(ion-icon[slot="start"]),
:host(.button-large) ::slotted(ion-spinner[slot="start"]),
:host(.button-xlarge) ::slotted(ion-icon[slot="start"]),
:host(.button-xlarge) ::slotted(ion-spinner[slot="start"]) {
  @include globals.margin-horizontal(null, globals.$ion-space-300);
}

:host(.button-xsmall) ::slotted(ion-icon[slot="end"]),
:host(.button-xsmall) ::slotted(ion-spinner[slot="end"]),
:host(.button-small) ::slotted(ion-icon[slot="end"]),
:host(.button-small) ::slotted(ion-spinner[slot="end"]) {
  @include globals.margin-horizontal(globals.$ion-space-200, null);
}

::slotted(ion-icon[slot="end"]),
::slotted(ion-spinner[slot="end"]) {
  @include globals.margin-horizontal(globals.$ion-space-250, null);
}

:host(.button-large) ::slotted(ion-icon[slot="end"]),
:host(.button-large) ::slotted(ion-spinner[slot="end"]),
:host(.button-xlarge) ::slotted(ion-icon[slot="end"]),
:host(.button-xlarge) ::slotted(ion-spinner[slot="end"]) {
  @include globals.margin-horizontal(globals.$ion-space-300, null);
}

// Button Badge
// --------------------------------------------------
:host ::slotted(ion-badge[vertical]:not(:empty)) {
  @include globals.padding(globals.$ion-space-050);
}
